version: '3'
   
services:

  django:
    labels:
      shipyard.before: 'poetry run python src/manage.py migrate'
      shipyard.route: '/'
    build: .
    volumes:
      - './src:/srv/src:ro'
    ports:
      - '8080:8080'
    depends_on:
      - postgres

  postgres:
    image: 'postgres:9.6.20-alpine'
    restart: always
    volumes:
      - 'postgres:/var/lib/postgresql/data'
    environment:
      - POSTGRES_DB=app
      - POSTGRES_USER=obscure-user
      - POSTGRES_PASSWORD=obscure-password
      - PGDATA=/var/lib/postgresql/data/pgdata
    ports:
      - '5432'
      
  redis:
    image: 'redis:5.0-alpine'
    labels:
      shipyard.init: 'sleep 30'
      shipyard.liveness.exec.command: '["redis-cli", "keys", "*"]'
      shipyard.liveness.initial_delay: 10
      shipyard.liveness.period: 15
      shipyard.liveness.success_threshold: 1
      shipyard.readiness.exec.command: '["redis-cli", "keys", "*"]'
      shipyard.readiness.initial_delay: 5
      shipyard.readiness.period: 5
      shipyard.readiness.success_threshold: 3
      shipyard.readiness.failure_threshold: 6
      shipyard.readiness.timeout_seconds: 11
    ports:
      - '6379'
      
  redis-2:
    image: 'redis:5.0-alpine'
    labels:
      shipyard.readiness.http.headers: '{"x-reason": "health"}'
      shipyard.readiness.http.path: /healthz
      shipyard.readiness.http.initial_delay: 30
      shipyard.readiness.http.period: 15
      shipyard.readiness.success_threshold: 3
      shipyard.readiness.failure_threshold: 6
      shipyard.readiness.timeout_seconds: 11
    ports:
      - '6379'

volumes:
  postgres:
